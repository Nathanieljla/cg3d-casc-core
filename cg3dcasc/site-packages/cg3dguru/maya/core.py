import typing
import tempfile
import os
import pathlib

import csc
import rig_mode.on as rm_on
import rig_mode.off as rm_off

import cg3dguru.core


MAYA_BEHAVIOUR_NAME = 'Maya Data'

#def get_temp_qrig_filename():
    #temp_dir = tempfile.gettempdir()
    #file_path = os.path.join(temp_dir, 'hik_to_.qrigcasc')
    
    #return file_path


#def get_temp_fbx_filename():
    #temp_dir = tempfile.gettempdir()
    #file_path = os.path.join(temp_dir, 'maya_to_casc.fbx')
    
    #return file_path


#def get_temp_commmand_filename():
    #temp_dir = tempfile.gettempdir()
    #file_path = os.path.join(temp_dir, 'csc_command_args.json')

    #return file_path


def _import_maya_qrig_file(file_path):
    #if not file_path:
        #file_path =  get_temp_qrig_filename()
    
    #if not os.path.exists(file_path):
        #print('MAYA IMPORT : No qrig file to import.')
        #return
    
    scene_manager = csc.app.get_application().get_scene_manager()
    application_scene = scene_manager.current_scene()
    rm_on.run_raw(application_scene.domain_scene(), [0.0, 0.5, 0.0])
    rig_tool = csc.app.get_application().get_tools_manager().get_tool('RiggingToolWindowTool').editor(application_scene)
    rig_tool.open_quick_rigging_tool()
    rig_tool.load_template_by_fileName(file_path)
    rig_tool.generate_rig_elements()
    

#def import_maya_fbx_model(new_scene=False, *args, **kwargs):
    #fbx_file = get_temp_fbx_filename()
    #if not os.path.exists(fbx_file):
        #print('No FBX file found')
        #return False
    
    ##if new_scene:
        ##cg3dguru.core.new_scene()
    
    #cg3dguru.core.import_fbx(fbx_file, cg3dguru.core.FbxFilterType.MODEL, new_scene)
    
    #return True


#def import_maya_scene(fbx_file, qrig_file, new_scene):
    #if new_scene:
        #print(True)
    #else:
        #print(False)

    #if not os.path.exists(fbx_file):
        #print('No FBX file found')
        #return False
    
    #cg3dguru.core.import_fbx(fbx_file, cg3dguru.core.FbxFilterType.MODEL, new_scene)
    #if os.path.exists(qrig_file):
        #import_maya_qrig_file(qrig_file)


#def import_maya_fbx_animation():
    #fbx_file = get_temp_fbx_filename()
    #if not os.path.exists(fbx_file):
        #print('No FBX file found')
        #return False
    
    ##if new_scene:
        ##cg3dguru.core.new_scene()
    
    #cg3dguru.core.import_fbx(fbx_file, cg3dguru.core.FbxFilterType.ANIMATION)
    
    #return True


    
def _get_object_by_id(object_list, maya_id):
    global MAYA_BEHAVIOUR_NAME
    
    for obj in object_list:
        behaviour = obj.get_behaviour_by_name(MAYA_BEHAVIOUR_NAME)
        if behaviour:
            return obj
        
    return None
    
    

def _create_data(scene, set_name, maya_id, new_roots):
    global MAYA_BEHAVIOUR_NAME
        
    obj = scene.create_object(set_name)
    behaviour = obj.add_behaviour('Dynamic', MAYA_BEHAVIOUR_NAME)
    data_prop = behaviour.get_property('datasWithSameNamesReadonly')
    data_prop.create_data('maya_id', csc.model.DataMode.Static, maya_id, group_name='{} update'.format(MAYA_BEHAVIOUR_NAME))
    
    behaviour_links = obj.add_behaviour('DynamicBehaviour')
    print(behaviour_links.get_property_names())
    
    
def import_maya(new_scene):
    if new_scene:
        scene = cg3dguru.core.new_scene()
    else:
        scene = cg3dguru.core.get_current_scene()

    scene.dom_scene.info("Importing Maya Data")
    temp_dir = pathlib.Path(os.path.join(tempfile.gettempdir(), 'mayacasc'))
    if not temp_dir.exists():
        scene.dom_scene.error("Can't find Maya data")
        return
    
        
    pre_import_roots = set(scene.get_scene_objects(only_roots=True))
    scene_roots = set(pre_import_roots)
    
    
    files = {}
    for child in temp_dir.iterdir():
        name, ext = child.name.rsplit('.', 1)
        if name not in files:
            files[name] = dict()
            
        files[name][ext.lower()] = str(child)
        
        
    for key, item in files.items():
        fbx = ''
        qrig = ''
        if 'fbx' in item:
            fbx = item['fbx']
        if 'qrigcasc' in item:
            qrig = item['qrigcasc']
            
        set_name, maya_id = key.split('.')
        
        obj = _get_object_by_id(pre_import_roots, maya_id)
        if not qrig:
            cg3dguru.core.import_fbx(fbx, cg3dguru.core.FbxFilterType.ANIMATION)
        else:
            cg3dguru.core.import_fbx(fbx, cg3dguru.core.FbxFilterType.MODEL)
            

        current_roots = set(scene.get_scene_objects(only_roots=True))
        new_roots = current_roots.difference(scene_roots)
        scene_roots = current_roots
        
        if obj is None:
            scene.edit('Import maya data', _create_data, set_name, maya_id, new_roots)
        else:
            scene.dom_scene.info("Updated existing data")
                
                
        #rig generation has to come last, so all the other automation can complete proeprly
        if qrig:
            _import_maya_qrig_file(qrig)
            

    
        
        
def export_maya_fbx_animation():
    import wingcarrier.pigeons
    maya = wingcarrier.pigeons.MayaPigeon()    
    
    
    
def run(*args, **kwargs):
    print("Run function called")
    import_maya(True)
    
  
  
print('core imported')  
    
#if __name__ == '__main__':
    #print("Importing")
    #import_fbx_file()
    


